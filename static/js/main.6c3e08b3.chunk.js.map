{"version":3,"sources":["components/AnalogClocks.jsx","components/DigitalClocks.jsx","App.js","serviceWorker.js","index.js"],"names":["AnalogCloks","location","useState","time","setTime","useEffect","setTimeout","timeArray","moment","tz","continent","city","format","split","hours","parseInt","minutes","seconds","console","log","divStyleHours","transform","divStyleMinutes","divStyleSeconds","className","id","viewBox","d","style","DigitalCloks","App","setLocation","timezoneToDisplay","setTimezoneToDisplay","timezone","setTimezone","bottomContainer","setBottomContainer","handleChange","event","target","name","value","textAlign","fontSize","onSubmit","e","preventDefault","join","handleSubmit","onChange","margin","type","placeholder","width","padding","borderRadius","onClick","display","Boolean","window","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.6c3e08b3.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport moment from \"moment-timezone\";\r\nimport \"./AnalogClocks.css\";\r\n\r\nexport default function AnalogCloks({ location }) {\r\n  const [time, setTime] = useState({});\r\n\r\n  useEffect(() => {\r\n    setTimeout(() => {\r\n      const tempTime = moment()\r\n        .tz(`${location.continent}/${location.city}`)\r\n        .format(\"HH:mm:ss\");\r\n\r\n      const timeArray = tempTime.split(\":\");\r\n      setTime({\r\n        hours: parseInt(timeArray[0]),\r\n        minutes: parseInt(timeArray[1]),\r\n        seconds: parseInt(timeArray[2]),\r\n      });\r\n    }, 1000);\r\n  }, [time, location.continent, location.city]);\r\n\r\n  console.log(\"time\", time);\r\n\r\n  const hoursDegrees = time.hours * 30 + time.hours / 2;\r\n  const minutesDegrees = time.minutes * 6 + time.minutes / 10;\r\n  const secondsDegrees = time.seconds * 6;\r\n\r\n  const divStyleHours = {\r\n    transform: \"rotateZ(\" + hoursDegrees + \"deg)\",\r\n  };\r\n\r\n  const divStyleMinutes = {\r\n    transform: \"rotateZ(\" + minutesDegrees + \"deg)\",\r\n  };\r\n\r\n  const divStyleSeconds = {\r\n    transform: \"rotateZ(\" + secondsDegrees + \"deg)\",\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"clock-container styling\">\r\n        <div id=\"clock\" className=\"clock-content\">\r\n          <svg className=\"background-numbers\" viewBox=\"0 0 226.6 233.8\">\r\n            <path\r\n              className=\"numbers\"\r\n              d=\"M105.5 22.7V6.4h-5.9V4.3c.8 0 1.5-.1 2.2-.2.7-.1 1.4-.3 2-.7.6-.3 1.1-.8 1.5-1.3.4-.6.7-1.3.8-2.1h2.1v22.7h-2.7zM114.1 4.8c.3-1 .8-1.8 1.4-2.5.6-.7 1.4-1.3 2.4-1.7.9-.4 2-.6 3.2-.6 1 0 1.9.1 2.8.4.9.3 1.6.7 2.3 1.2.6.5 1.1 1.2 1.5 2 .4.8.6 1.7.6 2.8 0 1-.2 1.9-.5 2.7s-.7 1.5-1.2 2.1c-.5.6-1.1 1.2-1.8 1.6-.7.5-1.3 1-2 1.4-.7.4-1.4.8-2.1 1.3s-1.3.9-1.9 1.3c-.6.5-1.1 1-1.5 1.5s-.7 1.2-.8 1.9h11.6v2.4h-14.8c.1-1.3.3-2.5.7-3.4.4-.9.8-1.8 1.4-2.5s1.2-1.3 2-1.9c.7-.5 1.5-1 2.3-1.5 1-.6 1.8-1.1 2.5-1.6s1.3-1 1.8-1.5.8-1.1 1.1-1.7.4-1.3.4-2.1c0-.6-.1-1.2-.4-1.7-.2-.5-.5-.9-.9-1.3s-.9-.6-1.4-.8c-.5-.2-1.1-.3-1.7-.3-.8 0-1.5.2-2 .5-.6.3-1 .8-1.4 1.3-.4.5-.6 1.1-.8 1.8s-.2 1.3-.2 2H114c-.3-1-.2-2.1.1-3.1zM166.5 38.2V21.9h-5.9v-2.2c.8 0 1.5-.1 2.2-.2.7-.1 1.4-.3 2-.7.6-.3 1.1-.8 1.5-1.3.4-.6.7-1.3.8-2.1h2.1v22.7h-2.7zM198.9 59.2c.3-1 .8-1.8 1.4-2.5.6-.7 1.4-1.3 2.4-1.7.9-.4 2-.6 3.2-.6 1 0 1.9.1 2.8.4.9.3 1.6.7 2.3 1.2.6.5 1.1 1.2 1.5 2 .4.8.6 1.7.6 2.8 0 1-.2 1.9-.5 2.7s-.7 1.5-1.2 2.1c-.5.6-1.1 1.2-1.8 1.6-.7.5-1.3 1-2 1.4-.7.4-1.4.8-2.1 1.3s-1.3.9-1.9 1.3c-.6.5-1.1 1-1.5 1.5s-.7 1.2-.8 1.9h11.6V77H198c.1-1.3.3-2.5.7-3.4.4-.9.8-1.8 1.4-2.5s1.2-1.3 2-1.9c.7-.5 1.5-1 2.3-1.5 1-.6 1.8-1.1 2.5-1.6s1.3-1 1.8-1.5.8-1.1 1.1-1.7.4-1.3.4-2.1c0-.6-.1-1.2-.4-1.7-.2-.5-.5-.9-.9-1.3s-.9-.6-1.4-.8c-.5-.2-1.1-.3-1.7-.3-.8 0-1.5.2-2 .5-.6.3-1 .8-1.4 1.3-.4.5-.6 1.1-.8 1.8s-.2 1.3-.2 2h-2.7c-.2-1.1-.1-2.1.2-3.1zM217.6 115.1H218.5c.6 0 1.1-.1 1.6-.2s1-.4 1.4-.7c.4-.3.7-.7.9-1.2.2-.5.4-1 .4-1.6 0-1.2-.4-2.1-1.2-2.7-.8-.6-1.7-.9-2.9-.9-.7 0-1.4.1-1.9.4-.5.3-1 .6-1.3 1.1-.4.4-.6 1-.8 1.6-.2.6-.3 1.2-.3 1.9h-2.7c0-1.1.2-2.1.5-3s.8-1.7 1.3-2.3c.6-.6 1.3-1.1 2.2-1.5.9-.4 1.9-.5 3-.5 1 0 1.9.1 2.7.4s1.6.6 2.2 1.1c.6.5 1.1 1.1 1.5 1.9s.5 1.7.5 2.7c0 1-.3 1.9-.9 2.7-.6.8-1.3 1.4-2.2 1.8v.1c1.4.3 2.4 1 3.1 2 .7 1 1 2.2 1 3.6 0 1.1-.2 2.1-.6 3-.4.9-1 1.6-1.7 2.2s-1.5 1-2.5 1.3-2 .4-3 .4c-1.2 0-2.2-.2-3.1-.5-.9-.3-1.7-.8-2.4-1.4-.7-.6-1.2-1.4-1.5-2.3-.4-.9-.5-2-.5-3.1h2.7c0 1.5.5 2.7 1.3 3.6.8.9 2 1.4 3.6 1.4.7 0 1.3-.1 1.9-.3.6-.2 1.1-.5 1.6-.9s.8-.8 1.1-1.4.4-1.2.4-1.8c0-.7-.1-1.3-.4-1.9s-.6-1-1-1.4-.9-.7-1.5-.8-1.2-.3-1.9-.3c-.6 0-1.1 0-1.6.1V115c-.1.1 0 .1.1.1zM214.2 173.8v2.4h-3.1v5.3h-2.6v-5.3h-10v-2.6l10.3-14.8h2.2v15h3.2zm-5.6-11.1l-7.6 11.1h7.6v-11.1zM163.7 199.4l-1.2 6.5.1.1c.5-.6 1.1-1 1.9-1.2.8-.3 1.6-.4 2.3-.4 1 0 2 .2 2.8.5.9.3 1.7.8 2.3 1.5.7.7 1.2 1.5 1.6 2.4s.6 2.1.6 3.4c0 1-.2 1.9-.5 2.8-.3.9-.8 1.7-1.5 2.4s-1.5 1.3-2.5 1.7-2.1.6-3.5.6c-1 0-1.9-.1-2.8-.4s-1.6-.7-2.3-1.2-1.2-1.2-1.6-2c-.4-.8-.6-1.7-.6-2.8h2.7c0 .6.2 1.1.4 1.6s.6.9 1 1.3.9.7 1.5.9c.6.2 1.2.3 1.9.3.6 0 1.3-.1 1.8-.3.6-.2 1.1-.6 1.5-1 .4-.4.8-1 1-1.7.3-.7.4-1.5.4-2.4 0-.7-.1-1.4-.4-2.1s-.6-1.2-1-1.6-1-.8-1.6-1.1-1.3-.4-2.1-.4c-.9 0-1.7.2-2.4.6-.7.4-1.3.9-1.8 1.6l-2.3-.1 2.1-11.8h11.2v2.4h-9zM116.4 214.1c-.7-.6-1.5-.9-2.6-.9-1.2 0-2.1.3-2.8.8s-1.3 1.3-1.6 2.1-.7 1.8-.8 2.8c-.1 1-.2 1.9-.3 2.8l.1.1c.6-1 1.4-1.8 2.4-2.3.9-.5 2-.7 3.3-.7 1.1 0 2.1.2 2.9.6.9.4 1.6.9 2.2 1.6s1 1.4 1.4 2.3c.3.9.5 1.9.5 2.9 0 .8-.1 1.7-.4 2.6-.3.9-.7 1.7-1.3 2.4-.6.7-1.4 1.3-2.3 1.8-1 .5-2.2.7-3.6.7-1.7 0-3-.3-4.1-1s-1.8-1.6-2.4-2.6c-.6-1.1-.9-2.2-1.1-3.5-.2-1.3-.3-2.5-.3-3.7 0-1.6.1-3.1.4-4.5.3-1.5.7-2.8 1.4-3.9.6-1.1 1.5-2 2.6-2.7 1.1-.7 2.4-1 4-1 1.9 0 3.4.5 4.5 1.5s1.7 2.4 1.9 4.3h-2.7c-.2-1.1-.6-1.9-1.3-2.5zm-4.9 7.5c-.6.3-1.1.6-1.5 1.1-.4.5-.7 1-.9 1.6-.2.6-.3 1.3-.3 2s.1 1.4.3 2c.2.6.5 1.2.9 1.6.4.4.9.8 1.5 1.1.6.3 1.3.4 2 .4s1.4-.1 2-.4c.6-.3 1-.6 1.4-1.1.4-.5.7-1 .9-1.6s.3-1.2.3-1.9-.1-1.4-.3-2c-.2-.6-.5-1.2-.8-1.6-.4-.5-.9-.8-1.4-1.1s-1.2-.4-2-.4c-.9-.1-1.5.1-2.1.3zM64.9 203.4c-1 1.6-1.9 3.2-2.7 5-.8 1.8-1.4 3.6-1.9 5.5s-.8 3.7-.9 5.5h-3c.1-1.9.4-3.8.9-5.6.5-1.8 1.1-3.6 1.9-5.2s1.7-3.3 2.7-4.8c1-1.5 2.1-2.9 3.3-4.1H53.5V197h14.7v2.3c-1.2 1.2-2.3 2.5-3.3 4.1zM15.2 162.1c.4-.7.9-1.3 1.5-1.8s1.3-.9 2.1-1.1c.8-.3 1.6-.4 2.5-.4 1.2 0 2.3.2 3.2.5.9.3 1.6.8 2.1 1.3s.9 1.2 1.2 1.9c.3.7.4 1.4.4 2.1 0 1-.3 2-.8 2.8s-1.3 1.5-2.3 1.9c1.4.4 2.4 1.1 3 2.1s1 2.2 1 3.6c0 1.1-.2 2.1-.6 2.9-.4.9-.9 1.6-1.6 2.2s-1.5 1-2.4 1.3-1.9.4-2.9.4c-1.1 0-2.1-.1-3-.4-.9-.3-1.8-.7-2.4-1.3s-1.2-1.3-1.6-2.2c-.4-.9-.6-1.9-.6-3 0-1.3.3-2.5 1-3.5s1.7-1.7 2.9-2.2c-1-.4-1.7-1-2.3-1.9-.6-.9-.9-1.8-.9-2.8-.1-.9.1-1.7.5-2.4zm2.9 16.2c.9.8 2.1 1.2 3.5 1.2.7 0 1.3-.1 1.9-.3.6-.2 1.1-.5 1.5-.9s.7-.9 1-1.4.3-1.1.3-1.8c0-.6-.1-1.2-.4-1.7s-.6-1-1-1.4-.9-.7-1.5-.9c-.6-.2-1.2-.3-1.8-.3-.7 0-1.3.1-1.9.3-.6.2-1.1.5-1.5.9-.4.4-.8.8-1 1.4-.2.5-.4 1.1-.4 1.8-.1 1.2.3 2.3 1.3 3.1zm-.3-12c.2.5.5.8.9 1.1.4.3.8.5 1.3.7.5.1 1 .2 1.6.2 1.1 0 2-.3 2.7-1 .7-.6 1.1-1.5 1.1-2.7s-.4-2-1.1-2.6c-.7-.6-1.6-.9-2.7-.9-.5 0-1 .1-1.5.2s-.9.4-1.3.7c-.4.3-.6.7-.8 1.1-.2.4-.3.9-.3 1.5-.2.7-.1 1.2.1 1.7zM4.5 125.1c.8.6 1.7.9 2.8.9 1.7 0 2.9-.7 3.7-2.2s1.3-3.6 1.4-6.6l-.1-.1c-.5 1-1.2 1.7-2.2 2.3-.9.6-2 .8-3.1.8-1.2 0-2.2-.2-3.1-.6-.9-.4-1.6-.9-2.3-1.6-.6-.7-1.1-1.5-1.4-2.4-.3-.9-.5-2-.5-3.1s.2-2.1.5-3c.4-.9.9-1.7 1.5-2.3.7-.7 1.5-1.2 2.4-1.5.9-.4 1.9-.5 3-.5s2.1.2 3 .5c.9.3 1.8.9 2.5 1.7.7.8 1.3 1.9 1.7 3.3.4 1.4.6 3.2.6 5.3 0 3.9-.6 6.9-1.9 9-1.2 2.1-3.2 3.2-6 3.2-1.9 0-3.5-.5-4.7-1.4s-2-2.4-2.1-4.4h2.7c.4 1.2.9 2.1 1.6 2.7zm7.2-14.2c-.2-.6-.5-1.2-.9-1.6s-.9-.9-1.5-1.1c-.6-.3-1.2-.4-2-.4s-1.5.1-2.1.4-1 .7-1.4 1.2c-.4.5-.6 1.1-.8 1.7-.2.6-.2 1.3-.2 2 0 .6.1 1.2.3 1.8.2.6.5 1.1.9 1.5.4.4.9.8 1.4 1.1s1.1.4 1.8.4 1.3-.1 1.9-.4 1.1-.6 1.5-1.1c.4-.5.7-1 .9-1.6.2-.6.3-1.2.3-1.9.2-.7.1-1.4-.1-2zM13.6 76V59.8H7.8v-2.2c.8 0 1.5-.1 2.2-.2.7-.1 1.4-.3 2-.7.6-.3 1.1-.8 1.5-1.3.4-.6.7-1.3.8-2.1h2.1V76h-2.8zM21.9 62.3c0-.9.1-1.8.3-2.6.2-.9.4-1.7.7-2.4.3-.8.8-1.4 1.3-2 .6-.6 1.3-1 2.1-1.4s1.9-.5 3-.5c1.2 0 2.2.2 3 .5s1.5.8 2.1 1.4c.6.6 1 1.2 1.3 2 .3.8.6 1.6.7 2.4.2.9.3 1.7.3 2.6s.1 1.8.1 2.6 0 1.7-.1 2.6-.1 1.8-.3 2.6c-.2.9-.4 1.7-.7 2.4s-.8 1.4-1.3 2c-.6.6-1.2 1-2.1 1.4s-1.8.5-3 .5-2.2-.2-3-.5-1.5-.8-2.1-1.4c-.6-.6-1-1.2-1.3-2s-.6-1.6-.7-2.4c-.2-.9-.3-1.7-.3-2.6 0-.9-.1-1.8-.1-2.6.1-.8.1-1.7.1-2.6zm2.9 5.4c.1 1.1.2 2 .5 3 .3.9.8 1.7 1.4 2.4s1.5 1 2.7 1c1.2 0 2-.3 2.7-1s1.1-1.4 1.4-2.4c.3-.9.5-1.9.5-3 .1-1.1.1-2 .1-2.9V63c0-.7-.1-1.3-.2-2s-.2-1.3-.4-2c-.2-.6-.4-1.2-.8-1.7s-.8-.9-1.3-1.2-1.2-.4-2-.4-1.4.1-2 .4c-.5.3-1 .7-1.3 1.2-.4.5-.6 1-.8 1.7-.2.6-.3 1.3-.4 2-.1.7-.1 1.3-.2 2v1.8c.1.9.1 1.9.1 2.9z\"\r\n            />\r\n            <g>\r\n              <path\r\n                className=\"numbers\"\r\n                d=\"M53.5 38.2V21.9h-5.9v-2.2c.8 0 1.5-.1 2.2-.2.7-.1 1.4-.3 2-.7.6-.3 1.1-.8 1.5-1.3.4-.6.7-1.3.8-2.1h2.1v22.7h-2.7zM69.1 38.2V21.9h-5.9v-2.2c.8 0 1.5-.1 2.2-.2.7-.1 1.4-.3 2-.7.6-.3 1.1-.8 1.5-1.3.4-.6.7-1.3.8-2.1h2.1v22.7h-2.7z\"\r\n              />\r\n            </g>\r\n          </svg>\r\n\r\n          <div\r\n            id=\"hours-indicator\"\r\n            className={\r\n              \"indicator hours-indicator \" +\r\n              (time.hours === 0 ? \"\" : \"transition-effect\")\r\n            }\r\n            style={divStyleHours}\r\n          ></div>\r\n          <div\r\n            id=\"minutes-indicator\"\r\n            className={\r\n              \"indicator minutes-indicator \" +\r\n              (time.minutes === 0 ? \"\" : \"transition-effect\")\r\n            }\r\n            style={divStyleMinutes}\r\n          ></div>\r\n          <div\r\n            id=\"seconds-indicator\"\r\n            className={\r\n              \"indicator seconds-indicator \" +\r\n              (time.seconds === 0 ? \"\" : \"transition-effect\")\r\n            }\r\n            style={divStyleSeconds}\r\n          ></div>\r\n          <div className=\"indicator-cover\"></div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport moment from \"moment-timezone\";\r\nimport \"./DigitalClocks.css\";\r\n\r\nexport default function DigitalCloks({ location }) {\r\n  const [time, setTime] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    setTimeout(() => {\r\n      setTime(\r\n        moment().tz(`${location.continent}/${location.city}`).format(\"HH:mm:ss\")\r\n      );\r\n    }, 1000);\r\n  }, [time, location.continent, location.city]);\r\n\r\n  return (\r\n    <div className=\"digitalClocks\">\r\n      <div className=\"digitalTime\">{time}</div>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\nimport \"./App.css\";\n\nimport AnalogClocks from \"./components/AnalogClocks\";\nimport DigitalClocks from \"./components/DigitalClocks\";\n\nfunction App() {\n  const [location, setLocation] = useState({});\n  const [timezoneToDisplay, setTimezoneToDisplay] = useState({\n    continent: \"\",\n    city: \"\",\n  });\n  const [timezone, setTimezone] = useState({ continent: \"America\", city: \"\" });\n  const [bottomContainer, setBottomContainer] = useState(true);\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    const city = timezone.city.split(\" \").join(\"_\");\n    setLocation({ continent: timezone.continent, city: city });\n    setTimezoneToDisplay(timezone);\n    setTimezone({ continent: \"America\", city: \"\" });\n  };\n\n  const handleChange = (event) => {\n    setTimezone({ ...timezone, [event.target.name]: event.target.value });\n  };\n\n  const handleDigital = () => {\n    setBottomContainer(false);\n  };\n\n  const handleAnalog = () => {\n    setBottomContainer(true);\n  };\n\n  return (\n    <div className=\"App\">\n      <div className=\"topContainer\" style={{ textAlign: \"center\" }}>\n        <h1 style={{ fontSize: \"3rem\" }}>Hi, Welcome to Clocks App</h1>\n        <h2 style={{ fontSize: \"2.3rem\" }}>Enter the continent and the city</h2>\n        <form\n          className=\"timezoneForm\"\n          onSubmit={(event) => {\n            handleSubmit(event);\n          }}\n        >\n          <label>\n            Choose the continent:{\" \"}\n            <select\n              name=\"continent\"\n              value={timezone.continent}\n              onChange={(event) => handleChange(event)}\n            >\n              <option value=\"America\">America</option>\n              <option value=\"Europe\">Europe</option>\n              <option value=\"Africa\">Africa</option>\n              <option value=\"Asia\">Asia</option>\n              <option value=\"Australia\">Australia</option>\n            </select>\n          </label>\n          <label style={{ margin: \"1% 0\" }}>\n            City:{\" \"}\n            <input\n              type=\"text\"\n              name=\"city\"\n              placeholder=\"enter the city name\"\n              value={timezone.city}\n              onChange={(event) => handleChange(event)}\n            />\n          </label>\n          <button\n            type=\"submit\"\n            style={{\n              fontSize: \"1.5rem\",\n              width: \"19%\",\n              margin: \"0.3% 0\",\n              padding: \"0.5%\",\n              borderRadius: \"6px\",\n            }}\n          >\n            Submit\n          </button>\n        </form>\n        <h3 style={{ fontSize: \"1.7rem\" }}>\n          Select the type of Clocks you want to see:\n        </h3>\n        <div className=\"clocksTypesContainer\">\n          <button className=\"clockType\" onClick={handleDigital}>\n            Digital\n          </button>\n          <button className=\"clockType\" onClick={handleAnalog}>\n            Analog\n          </button>\n        </div>\n        <h4\n          style={\n            timezoneToDisplay.continent !== \"\" && timezoneToDisplay.city !== \"\"\n              ? { display: \"block\", fontSize: \"1.1rem\" }\n              : { display: \"none\" }\n          }\n        >\n          Currently you are viewing: {timezoneToDisplay.continent},{\" \"}\n          {timezoneToDisplay.city}\n        </h4>\n      </div>\n      {bottomContainer ? (\n        <AnalogClocks location={location} />\n      ) : (\n        <DigitalClocks location={location} />\n      )}\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}